{"ast":null,"code":"import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nfunction postReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","map":{"version":3,"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","postReducer","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"sources":["C:/Users/Mateo/Desktop/projects/MERN-course/client/src/reducers/post.js"],"sourcesContent":["import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n  };\r\n  \r\n  function postReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n          loading: false\r\n        };\r\n      case GET_POST:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          loading: false\r\n        };\r\n      case ADD_POST:\r\n        return {\r\n          ...state,\r\n          posts: [payload, ...state.posts],\r\n          loading: false\r\n        };\r\n      case DELETE_POST:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter((post) => post._id !== payload),\r\n          loading: false\r\n        };\r\n      case POST_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false\r\n        };\r\n      case UPDATE_LIKES:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.map((post) =>\r\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n          ),\r\n          loading: false\r\n        };\r\n      case ADD_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: { ...state.post, comments: payload },\r\n          loading: false\r\n        };\r\n      case REMOVE_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n              (comment) => comment._id !== payload\r\n            )\r\n          },\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default postReducer;"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,QASS,kBATT;AAWE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,IAAI,EAAE,IAFa;EAGnBC,OAAO,EAAE,IAHU;EAInBC,KAAK,EAAE;AAJY,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBN,YAAsB;EAAA,IAARO,MAAQ;EACjD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEA,QAAQC,IAAR;IACE,KAAKhB,SAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELL,KAAK,EAAEQ,OAFF;QAGLN,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKN,QAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELJ,IAAI,EAAEO,OAFD;QAGLN,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKP,QAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELL,KAAK,EAAE,CAACQ,OAAD,EAAU,GAAGH,KAAK,CAACL,KAAnB,CAFF;QAGLE,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKR,WAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELL,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACS,GAAL,KAAaF,OAA1C,CAFF;QAGLN,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKV,UAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELF,KAAK,EAAEK,OAFF;QAGLN,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKT,YAAL;MACE,OAAO,EACL,GAAGY,KADE;QAELL,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAiBV,IAAD,IACrBA,IAAI,CAACS,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EAAE,GAAGX,IAAL;UAAWY,KAAK,EAAEL,OAAO,CAACK;QAA1B,CAA1B,GAA8DZ,IADzD,CAFF;QAKLC,OAAO,EAAE;MALJ,CAAP;;IAOF,KAAKL,WAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELJ,IAAI,EAAE,EAAE,GAAGI,KAAK,CAACJ,IAAX;UAAiBa,QAAQ,EAAEN;QAA3B,CAFD;QAGLN,OAAO,EAAE;MAHJ,CAAP;;IAKF,KAAKJ,cAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELJ,IAAI,EAAE,EACJ,GAAGI,KAAK,CAACJ,IADL;UAEJa,QAAQ,EAAET,KAAK,CAACJ,IAAN,CAAWa,QAAX,CAAoBL,MAApB,CACPM,OAAD,IAAaA,OAAO,CAACL,GAAR,KAAgBF,OADrB;QAFN,CAFD;QAQLN,OAAO,EAAE;MARJ,CAAP;;IAUF;MACE,OAAOG,KAAP;EAzDJ;AA2DD;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}