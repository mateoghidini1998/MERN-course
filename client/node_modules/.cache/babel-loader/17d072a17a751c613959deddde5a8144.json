{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = [];\n\nfunction alertReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer;","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","alertReducer","state","action","type","payload","filter","alert","id"],"sources":["C:/Users/Mateo/OneDrive/Desktop/MERN/MERN-course/client/src/reducers/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction alertReducer( state = initialState, action){\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n            \r\n    \r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default alertReducer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,YAAT,GAAoD;EAAA,IAA7BC,KAA6B,uEAArBF,YAAqB;EAAA,IAAPG,MAAO;EAChD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEA,QAAQC,IAAR;IACI,KAAKN,SAAL;MACI,OAAO,CAAC,GAAGI,KAAJ,EAAWG,OAAX,CAAP;;IAGJ,KAAKN,YAAL;MACI,OAAOG,KAAK,CAACI,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaH,OAAnC,CAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAUH;;AAED,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}