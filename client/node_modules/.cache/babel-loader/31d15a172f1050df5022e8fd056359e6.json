{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = [];\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","state","action","type","payload","filter","alert","id"],"sources":["C:/Users/Mateo/OneDrive/Desktop/MERN/MERN-course/client/src/reducers/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function( state = initialState, action){\r\n    const { type, payload } = action\r\n\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n            \r\n    \r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,YAAuC;EAAA,IAA7BC,KAA6B,uEAArBD,YAAqB;EAAA,IAAPE,MAAO;EAClD,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EAEA,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKL,SAAL;MACI,OAAO,CAAC,GAAGG,KAAJ,EAAWG,OAAX,CAAP;;IAGJ,KAAKL,YAAL;MACI,OAAOE,KAAK,CAACI,MAAN,CAAaC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaH,OAAnC,CAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAUH"},"metadata":{},"sourceType":"module"}