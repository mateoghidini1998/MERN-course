{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; // Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:5000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:5000/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/profile', formData);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        navigate('http://localhost:5000/api/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // Add Experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:5000/api/profile/experience', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const res = await axios.put('http://localhost:5000/api/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('http://localhost:5000/api/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`http://localhost:5000/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete account and profile\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone')) {\n    try {\n      const res = await axios.delete(`http://localhost:5000/api/profile/`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your Account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfileById","userId","createProfile","formData","navigate","edit","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"sources":["C:/Users/Mateo/OneDrive/Desktop/MERN/MERN-course/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n  \r\n} from './types';\r\n\r\n\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('http://localhost:5000/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`http://localhost:5000/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Create or update profile\r\nexport const createProfile =\r\n  (formData, navigate, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/profile', formData);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n      );\r\n\r\n      if (!edit) {\r\n        navigate('http://localhost:5000/api/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put('http://localhost:5000/api/profile/experience', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put('http://localhost:5000/api/profile/education', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    navigate('http://localhost:5000/api/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`http://localhost:5000/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`http://localhost:5000/api/profile/education/${id}`);\r\n  \r\n      dispatch({\r\n        type: UPDATE_PROFILE,\r\n        payload: res.data\r\n      });\r\n  \r\n      dispatch(setAlert('Education Removed', 'success'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n  //Delete account and profile\r\n  export const deleteAccount = (id) => async (dispatch) => {\r\n    if(window.confirm('Are you sure? This cannot be undone')){\r\n\r\n        try {\r\n          const res = await axios.delete(`http://localhost:5000/api/profile/`);\r\n      \r\n          dispatch({\r\n            type: CLEAR_PROFILE,\r\n            \r\n          });\r\n          dispatch({\r\n            type: ACCOUNT_DELETED,\r\n            \r\n          });\r\n      \r\n          dispatch(setAlert('Your Account has been permanently deleted'));\r\n        } catch (err) {\r\n          dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n        }\r\n    }\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}