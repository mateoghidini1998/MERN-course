{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS, NO_REPOS } from './types';\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\n// Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await api.get('/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData, navigate) {\n  let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return async dispatch => {\n    try {\n      const res = await api.post('/profile', formData);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // Add Experience\n\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const res = await api.put('/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","NO_REPOS","getCurrentProfile","dispatch","res","api","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","navigate","edit","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete"],"sources":["C:/Users/Mateo/OneDrive/Desktop/MERN/MERN-course/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n  NO_REPOS\r\n} from './types';\r\n\r\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await api.get('/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NO_REPOS\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile =\r\n  (formData, navigate, edit = false) =>\r\n  async (dispatch) => {\r\n    try {\r\n      const res = await api.post('/profile', formData);\r\n\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n\r\n      dispatch(\r\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\r\n      );\r\n\r\n      if (!edit) {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/experience', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/education', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}