{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types'; //Register user\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (error) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","error","errors","response","forEach","msg"],"sources":["C:/Users/Mateo/OneDrive/Desktop/MERN/MERN-course/client/src/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR\r\n} from './types'\r\n\r\n//Register user\r\n\r\nexport const register = ( { name, email, password } ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name , email, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (error) {\r\n\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:REGISTER_FAIL\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP,C,CAOA;;AAEA,OAAO,MAAMC,QAAQ,GAAG;EAAA,IAAE;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAAF;EAAA,OAAiC,MAAMC,QAAN,IAAkB;IACvE,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAMA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;MAAER,IAAF;MAASC,KAAT;MAAgBC;IAAhB,CAAf,CAAb;;IAEA,IAAI;MACA,MAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8CJ,IAA9C,EAAoDF,MAApD,CAAlB;MAEAD,QAAQ,CAAC;QACLQ,IAAI,EAAEhB,gBADD;QAELiB,OAAO,EAAEH,GAAG,CAACI;MAFR,CAAD,CAAR;IAKH,CARD,CAQE,OAAOC,KAAP,EAAc;MAEZ,MAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBE,MAAnC;;MAEA,IAAGA,MAAH,EAAU;QACNA,MAAM,CAACE,OAAP,CAAeH,KAAK,IAAIX,QAAQ,CAACT,QAAQ,CAACoB,KAAK,CAACI,GAAP,EAAY,QAAZ,CAAT,CAAhC;MACH;;MAEDf,QAAQ,CAAC;QACLQ,IAAI,EAACf;MADA,CAAD,CAAR;IAGH;EACJ,CA7BuB;AAAA,CAAjB"},"metadata":{},"sourceType":"module"}